name: CI

on:
  push:
    branches:
      - '*'
    tags:
      - v*
  pull_request:
    branches:
      - '*'
permissions:
  actions: write
  checks: write
  contents: read
  deployments: read
  issues: read
  packages: read
  pull-requests: write
  repository-projects: read
  security-events: read
  statuses: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: build
    strategy:
      matrix:
        node-version: ['16']
    steps:
      - uses: actions/checkout@v3
      - name: Use Node Version ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "DIR=$(yarn cache dir)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ env.DIR }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/cache@v3
        name: Cache node_modules
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

      - name: Install Dependencies
        run: yarn --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true' || steps.cache-node-modules.outputs.cache-hit != 'true'

      - name: Unit tests
        run: yarn test

  release:
    runs-on: ubuntu-latest
    environment:
      name: release
    if: contains(github.ref, 'tag')
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Use Node Version 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "DIR=$(yarn cache dir)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ env.DIR }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn --frozen-lockfile
        if: steps.yarn-cache.outputs.cache-hit != 'true' || steps.cache-node-modules.outputs.cache-hit != 'true'

      - name: Build package
        run: yarn build

      - name: Publish package
        run: npm publish --production #--access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
